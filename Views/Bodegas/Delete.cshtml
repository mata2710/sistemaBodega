@model SistemaBodega.Models.Bodega
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Eliminar bodega";
    var rol = Context.Session.GetString("Rol");
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />

<style>
    /* ===== Cards / layout ===== */
    .card.shadow-sm {
        border: 1px solid rgba(0,0,0,.06);
        border-radius: .75rem
    }

    .section-title {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: .75rem;
        padding-left: .65rem;
        border-left: 4px solid #00809D
    }

    /* ===== Definición en rejilla ===== */
    .dl-grid {
        display: grid;
        grid-template-columns: 180px 1fr;
        row-gap: .35rem;
        column-gap: 1rem
    }

        .dl-grid dt {
            color: #6c757d;
            font-weight: 600;
            display: flex;
            align-items: center
        }

        .dl-grid dd {
            margin: 0
        }

    @@media (max-width: 768px) {
        .dl-grid {
            grid-template-columns: 1fr
        }
    }

    /* ===== Badges estado ===== */
    .badge-state {
        display: inline-block;
        padding: .25rem .6rem;
        border-radius: 999px;
        font-weight: 600;
        font-size: .85rem;
        border: 1px solid transparent;
        white-space: nowrap
    }

    .state-available {
        background: #E7F6EC;
        color: #1F7A39;
        border-color: #BDE4C7
    }
    /* Disponible */
    .state-occupied {
        background: #fdecea;
        color: #b42318;
        border-color: #f5c2c7
    }
    /* Ocupada    */
    .state-reserved {
        background: #fff4cc;
        color: #664d03;
        border-color: #ffec99
    }
    /* Reservada  */

    /* ===== Botones ===== */
    .btn-danger {
        border: 0
    }

    .btn-outline-secondary {
        border-color: #cfd4da
    }

    /* Utilidades */
    .text-mono {
        font-variant-numeric: tabular-nums
    }
</style>

<div class="d-flex justify-content-between align-items-center mt-3 mb-2 page-tools">
    <h2 class="mb-0 text-danger"><i class="bi bi-exclamation-triangle me-1"></i> Eliminar bodega</h2>
    <a asp-action="Index" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-short me-1"></i> Volver al listado
    </a>
</div>

<div class="alert alert-danger d-flex align-items-center" role="alert">
    <i class="bi bi-trash3 me-2"></i>
    <div>
        ¿Estás seguro de que querés eliminar este registro? <strong>Esta acción no se puede deshacer.</strong>
    </div>
</div>

<div class="row g-3">
    <!-- Columna principal -->
    <div class="col-lg-8">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="section-title">Resumen</div>
                <dl class="dl-grid">
                    <dt><i class="bi bi-house-door me-2"></i>Nombre</dt>
                    <dd>@(Model?.Nombre ?? "—")</dd>

                    <dt><i class="bi bi-geo-alt me-2"></i>Ubicación</dt>
                    <dd>@(string.IsNullOrWhiteSpace(Model?.Ubicacion) ? "—" : Model!.Ubicacion)</dd>

                    <dt><i class="bi bi-grid-3x3-gap me-2"></i>Complejo</dt>
                    <dd>@(string.IsNullOrWhiteSpace(Model?.Complejo) ? "—" : Model!.Complejo)</dd>

                    <dt><i class="bi bi-circle-fill me-2"></i>Estado</dt>
                    <dd>
                        @{
                            var estado = Model?.Estado?.Trim();
                            if (string.Equals(estado, "Disponible", System.StringComparison.OrdinalIgnoreCase))
                            {
                                @:<span class="badge-state state-available">Disponible</span>
                            }
                            else if (string.Equals(estado, "Ocupada", System.StringComparison.OrdinalIgnoreCase))
                            {
                                @:<span class="badge-state state-occupied">Ocupada</span>
                            }
                            else if (string.Equals(estado, "Reservada", System.StringComparison.OrdinalIgnoreCase))
                            {
                                @:<span class="badge-state state-reserved">Reservada</span>
                            }
                            else
                            {
                                @:<span class="badge-state" style="background:#eef1f4;color:#4b5563;border-color:#e5e7eb;">@((string.IsNullOrWhiteSpace(estado) ? "—" : estado))</span>
                            }
                        }
                    </dd>
                </dl>
            </div>
        </div>
    </div>

    <!-- Columna lateral -->
    <div class="col-lg-4">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="section-title">Dimensiones y costos</div>
                <dl class="dl-grid">
                    <dt><i class="bi bi-aspect-ratio me-2"></i>Área (m²)</dt>
                    <dd class="text-mono">@(Model?.AreaM2.HasValue == true ? Model.AreaM2.Value.ToString("N2") : "0.00")</dd>

                    <dt><i class="bi bi-currency-dollar me-2"></i>Precio por m²</dt>
                    <dd class="text-mono">@(Model?.PrecioAlquilerPorM2.HasValue == true ? "$ " + Model.PrecioAlquilerPorM2.Value.ToString("N2") : "$ 0.00")</dd>

                    <dt><i class="bi bi-cash-stack me-2"></i>Precio total</dt>
                    <dd class="text-mono">@(Model?.Precio.HasValue == true ? "$ " + Model.Precio.Value.ToString("N2") : "$ 0.00")</dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<form asp-action="Delete" method="post" class="mt-3">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />

    <div class="d-flex gap-2">
        <button type="submit" class="btn btn-danger">
            <i class="bi bi-trash3 me-1"></i> Eliminar
        </button>
        <a asp-action="Index" class="btn btn-outline-secondary">
            Cancelar
        </a>
    </div>
</form>
