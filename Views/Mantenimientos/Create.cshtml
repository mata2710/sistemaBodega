@model SistemaBodega.Models.Mantenimiento
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Crear mantenimiento";

    // Valores iniciales para el preview
    string? bodegaNombre = string.IsNullOrWhiteSpace(Model?.Bodega?.Nombre) ? null : Model!.Bodega!.Nombre;
    string? tipo = string.IsNullOrWhiteSpace(Model?.TipoMantenimiento) ? null : Model!.TipoMantenimiento;
    string? responsable = string.IsNullOrWhiteSpace(Model?.EmpresaResponsable) ? null : Model!.EmpresaResponsable;
    string? comentarios = string.IsNullOrWhiteSpace(Model?.ComentariosAdministracion) ? null : Model!.ComentariosAdministracion;

    string? fecha = (Model is null || Model.FechaMantenimiento == default)
        ? null
        : Model.FechaMantenimiento.ToString("yyyy-MM-dd");

    string? costoStr = (Model is null || Model.Costo <= 0)
        ? null
        : Model.Costo.ToString("0.00");
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />

<style>
    /* ===== Estructura y layout (igual a Clientes) ===== */
    .section-title {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: .75rem;
        padding-left: .65rem;
        border-left: 4px solid #00809D;
    }

    .card.shadow-sm {
        border: 1px solid rgba(0,0,0,.06);
    }

    .page-tools {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: .75rem;
    }

        .page-tools .btn {
            margin-top: 0 !important;
        }

    /* ===== Botones (verde/rojo) ===== */
    .btn-save {
        background: #437057 !important;
        color: #fff !important;
        border: 0 !important;
    }

        .btn-save:hover {
            filter: brightness(.95);
            color: #fff !important;
            background: #3a614c !important;
        }

        .btn-save:focus {
            box-shadow: 0 0 0 .2rem rgba(67,112,87,.25) !important;
        }

    .btn-cancel {
        background: #DC3C22 !important;
        color: #fff !important;
        border: 0 !important;
    }

        .btn-cancel:hover {
            background: #C3341E !important;
            color: #fff !important;
        }

        .btn-cancel:focus {
            box-shadow: 0 0 0 .2rem rgba(220,60,34,.25) !important;
        }

    /* ===== Input groups con iconos ===== */
    .input-group-text i {
        opacity: .85;
    }

    /* ===== Grid preview ===== */
    .dl-grid {
        display: grid;
        grid-template-columns: 160px 1fr;
        row-gap: .35rem;
        column-gap: 1rem;
    }

        .dl-grid dt {
            color: #6c757d;
            font-weight: 600;
            display: flex;
            align-items: center;
        }

        .dl-grid dd {
            margin: 0;
        }

    /* ===== Badge "Pendiente" ===== */
    .badge-pending {
        background: #EAC8A6;
        color: #3d2b12;
        border: 1px solid #EAC8A6;
        padding: .2rem .55rem;
        border-radius: 999px;
        font-weight: 600;
        font-size: .85rem;
    }

    /* ===== Segmented control (Tipo) ===== */
    .segmented {
        display: flex;
        flex-wrap: wrap;
        gap: .5rem;
    }

        .segmented .btn {
            border-radius: 999px;
        }
</style>

<div class="page-tools mt-3 mb-3">
    <h2 class="mb-0">Crear mantenimiento</h2>
    <a asp-action="Index" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-short"></i> Volver al listado
    </a>
</div>

<div class="row g-3">
    <!-- Columna izquierda: formulario -->
    <div class="col-lg-8">
        <div class="card shadow-sm">
            <div class="card-body">
                <form asp-action="Create" method="post" novalidate>
                    @Html.AntiForgeryToken()

                    <div asp-validation-summary="ModelOnly"
                         class="alert alert-danger rounded-3 mb-3"
                         role="alert"
                         style="display:@(ViewData.ModelState.IsValid ? "none" : "block")">
                        Revisa los campos marcados en rojo.
                    </div>

                    <!-- Bodega -->
                    <div class="mb-3">
                        <label asp-for="IdBodega" class="form-label">Bodega</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-building"></i></span>
                            <select asp-for="IdBodega" class="form-select form-select-lg" asp-items="ViewBag.IdBodega" id="inBodega">
                                <option value="">Seleccione...</option>
                            </select>
                        </div>
                        <span asp-validation-for="IdBodega" class="text-danger small"></span>
                    </div>

                    <!-- Fecha -->
                    <div class="mb-3">
                        <label asp-for="FechaMantenimiento" class="form-label">Fecha</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
                            <input asp-for="FechaMantenimiento" class="form-control form-control-lg" type="date" id="inFecha" />
                        </div>
                        <span asp-validation-for="FechaMantenimiento" class="text-danger small"></span>
                    </div>

                    <!-- Tipo (Segmented control) -->
                    <div class="mb-3">
                        <label class="form-label">Tipo</label>
                        <div class="segmented">
                            <input asp-for="TipoMantenimiento" class="btn-check" type="radio" id="tipoPrev" value="Preventivo" autocomplete="off" />
                            <label class="btn btn-outline-secondary" for="tipoPrev">Preventivo</label>

                            <input asp-for="TipoMantenimiento" class="btn-check" type="radio" id="tipoCorr" value="Correctivo" autocomplete="off" />
                            <label class="btn btn-outline-secondary" for="tipoCorr">Correctivo</label>

                            <input asp-for="TipoMantenimiento" class="btn-check" type="radio" id="tipoInsp" value="Inspección" autocomplete="off" />
                            <label class="btn btn-outline-secondary" for="tipoInsp">Inspección</label>

                            <input asp-for="TipoMantenimiento" class="btn-check" type="radio" id="tipoLimp" value="Limpieza" autocomplete="off" />
                            <label class="btn btn-outline-secondary" for="tipoLimp">Limpieza</label>
                        </div>
                        <span asp-validation-for="TipoMantenimiento" class="text-danger small"></span>
                    </div>

                    <!-- Costo -->
                    <div class="mb-3">
                        <label asp-for="Costo" class="form-label">Costo</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                            <input asp-for="Costo" class="form-control form-control-lg" type="number" step="0.01" min="0" id="inCosto" placeholder="Ej.: 150.00" />
                        </div>
                        <span asp-validation-for="Costo" class="text-danger small"></span>
                    </div>

                    <!-- Responsable -->
                    <div class="mb-3">
                        <label asp-for="EmpresaResponsable" class="form-label">Responsable</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                            <input asp-for="EmpresaResponsable" class="form-control form-control-lg" id="inResp" placeholder="Empresa o persona responsable" />
                        </div>
                        <span asp-validation-for="EmpresaResponsable" class="text-danger small"></span>
                    </div>

                    <!-- Comentarios -->
                    <div class="mb-3">
                        <label asp-for="ComentariosAdministracion" class="form-label">Comentarios</label>
                        <textarea asp-for="ComentariosAdministracion" class="form-control" rows="3" id="inCom" placeholder="Notas de la administración..."></textarea>
                        <span asp-validation-for="ComentariosAdministracion" class="text-danger small"></span>
                    </div>

                    <div class="d-flex flex-wrap gap-2 mt-4">
                        <button type="submit" class="btn btn-save btn-lg">
                            <i class="bi bi-check2"></i> Guardar mantenimiento
                        </button>
                        <a asp-action="Index" class="btn btn-cancel btn-lg">
                            <i class="bi bi-x-circle"></i> Cancelar
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Columna derecha: preview en vivo -->
    <div class="col-lg-4">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="section-title">Resumen (preview)</div>
                <dl class="dl-grid">
                    <dt>Bodega</dt>
                    <dd id="pvBodega">
                        @if (bodegaNombre == null)
                        {
                            <span class="badge-pending">Pendiente</span>
                        }
                        else
                        {

                            @bodegaNombre
                        }
                    </dd>

                    <dt>Fecha</dt>
                    <dd id="pvFecha">
                        @if (fecha == null)
                        {
                            <span class="badge-pending">Pendiente</span>
                        }
                        else
                        {

                            @fecha
                        }
                    </dd>

                    <dt>Tipo</dt>
                    <dd id="pvTipo">
                        @if (tipo == null)
                        {
                            <span class="badge-pending">Pendiente</span>
                        }
                        else
                        {

                            @tipo
                        }
                    </dd>

                    <dt>Costo</dt>
                    <dd id="pvCosto">
                        @if (string.IsNullOrWhiteSpace(costoStr))
                        {
                            <span class="badge-pending">Pendiente</span>
                        }
                        else
                        {

                            @($"$ {costoStr}")
                        }
                    </dd>

                    <dt>Responsable</dt>
                    <dd id="pvResp">
                        @if (responsable == null)
                        {
                            <span class="badge-pending">Pendiente</span>
                        }
                        else
                        {

                            @responsable
                        }
                    </dd>

                    <dt>Comentarios</dt>
                    <dd id="pvCom">
                        @if (comentarios == null)
                        {
                            <span class="badge-pending">Pendiente</span>
                        }
                        else
                        {

                            @comentarios
                        }
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        (function () {
            const PENDING = '<span class="badge-pending">Pendiente</span>';

            // Inputs
            const inBodega = document.getElementById('inBodega');
            const inFecha  = document.getElementById('inFecha');
            const inCosto  = document.getElementById('inCosto');
            const inResp   = document.getElementById('inResp');
            const inCom    = document.getElementById('inCom');

            // Radio group (Tipo)
            const tipoRadios = Array.from(document.querySelectorAll('input[name="TipoMantenimiento"]'));

            // Helpers
            const $      = (id) => document.getElementById(id);
            const setHTML= (el, html) => { if (el) el.innerHTML = html; };
            const setTxt = (el, txt)  => { if (el) el.textContent = txt; };
            const valOrNull = (el) => (el && el.value && el.value.trim() !== '') ? el.value.trim() : null;

            function updateBodega() {
                const slot = $('pvBodega');
                let txt = '';
                if (inBodega && inBodega.selectedOptions?.length) {
                    txt = (inBodega.selectedOptions[0].text || '').trim();
                }
                txt ? setTxt(slot, txt) : setHTML(slot, PENDING);
            }
            function updateFecha() {
                const v = valOrNull(inFecha);
                v ? setTxt($('pvFecha'), v) : setHTML($('pvFecha'), PENDING);
            }
            function updateTipo() {
                const sel = tipoRadios.find(r => r.checked);
                sel ? setTxt($('pvTipo'), sel.value) : setHTML($('pvTipo'), PENDING);
            }
            function updateCosto() {
                const v = valOrNull(inCosto);
                if (!v) { setHTML($('pvCosto'), PENDING); return; }
                const n = Number((v + '').replace(',', '.'));
                (isFinite(n) && n > 0) ? setTxt($('pvCosto'), '$ ' + n.toFixed(2)) : setHTML($('pvCosto'), PENDING);
            }
            function updateResp() {
                const v = valOrNull(inResp);
                v ? setTxt($('pvResp'), v) : setHTML($('pvResp'), PENDING);
            }
            function updateCom() {
                const v = valOrNull(inCom);
                v ? setTxt($('pvCom'), v) : setHTML($('pvCom'), PENDING);
            }

            // Eventos
            inBodega?.addEventListener('change', updateBodega);
            inFecha?.addEventListener('input', updateFecha);
            inCosto?.addEventListener('input', updateCosto);
            inResp?.addEventListener('input', updateResp);
            inCom?.addEventListener('input', updateCom);
            tipoRadios.forEach(r => r.addEventListener('change', updateTipo));

            // Init
            updateBodega(); updateFecha(); updateTipo(); updateCosto(); updateResp(); updateCom();
        })();
    </script>
}
