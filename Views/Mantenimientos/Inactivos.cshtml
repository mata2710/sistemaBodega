@model SistemaBodega.Models.PagedResult<SistemaBodega.Models.Mantenimiento>
@using Microsoft.AspNetCore.Http
@using System.Globalization

@{
    ViewData["Title"] = "Mantenimientos inactivos";
    var rol = Context?.Session?.GetString("Rol");

    var cr = new CultureInfo("es-CR");

    // Filtros (igual que en Index)
    string q = (ViewBag.q as string) ?? (Context?.Request?.Query["q"].ToString() ?? "");
    string tipo = (ViewBag.tipo as string) ?? (Context?.Request?.Query["tipo"].ToString() ?? "");

    // Lista de tipos (si el controlador no la pasa por ViewBag.Tipos)
    var tipos = (ViewBag.Tipos as List<string>) ??
                (Model?.Items?
                    .Where(x => !string.IsNullOrWhiteSpace(x.TipoMantenimiento))
                    .Select(x => x.TipoMantenimiento!.Trim())
                    .Distinct()
                    .OrderBy(x => x)
                    .ToList()
                 ?? new List<string>());

    // Base fija de filtros visibles SIEMPRE
    var baseTipos = new[] { "Correctivo", "Inspección", "Limpieza" };

    // Extras (cualquier tipo adicional que venga del backend)
    var extras = tipos
        .Where(t => !baseTipos.Any(b => string.Equals(b, t, System.StringComparison.OrdinalIgnoreCase)))
        .ToList();

    bool selTodos = string.IsNullOrEmpty(tipo);

    int totalPages = Math.Max(1, (int)Math.Ceiling((decimal)(Model?.TotalItems ?? 0) / (Model?.PageSize ?? 10)));
    int startRow = (Model?.TotalItems ?? 0) == 0 ? 0 : (((Model!.Page - 1) * Model!.PageSize) + 1);
    int endRow = Math.Min(Model!.Page * Model!.PageSize, Model.TotalItems);
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />

<style>
    /* Solo lo que NO está ya en site.css */
    .card-filters {
        border: 1px solid rgba(0,0,0,.06);
        border-radius: .75rem;
    }

    .badge-soft-accent {
        background: #FDEDE9;
        color: #a23a2c;
        font-weight: 600;
        border-radius: .5rem;
        padding: .25rem .5rem;
    }
</style>

<!-- Encabezado -->
<div class="page-tools mt-3 mb-3 justify-content-between">
    <div>
        <h1 class="m-0">Mantenimientos inactivos</h1>
        <div class="text-muted">Total: @Model.TotalItems</div>
    </div>

    <div class="d-flex align-items-center gap-2">
        @if (rol == "Administrador")
        {
            <a asp-action="Create" class="btn btn-create">
                <i class="bi bi-plus-lg me-1"></i> Crear Mantenimiento
            </a>
        }
        <a asp-action="Index"
           asp-route-page="1"
           asp-route-pageSize="@Model.PageSize"
           asp-route-q="@q"
           asp-route-tipo="@tipo"
           class="btn btn-volver-activos">
            <i class="bi bi-arrow-left-circle me-1"></i> Volver a Activos
        </a>
    </div>
</div>

@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["Mensaje"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
    </div>
}

<!-- Filtros (mismo look que Index) -->
<form method="get" class="card card-filters shadow-sm mb-3" asp-action="Inactivos">
    <div class="card-body p-3 p-md-4">
        <div class="row g-2 g-md-3 align-items-end">
            <!-- Buscar -->
            <div class="col-12 col-md-6 col-lg-5">
                <label class="form-label fw-semibold" for="q">Buscar</label>
                <div class="search-group">
                    <input id="q" name="q" value="@q" class="form-control form-control-sm pe-5"
                           placeholder="Empresa, bodega o comentario…" />
                    <button type="submit" class="btn-search" aria-label="Buscar">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Pills rápidas (Tipo) -->
        <div class="filters-quick mt-3">
            <a class="filter-pill @(selTodos ? "active" : "")"
               asp-action="Inactivos"
               asp-route-page="1"
               asp-route-pageSize="@Model.PageSize"
               asp-route-q="@q"
               asp-route-tipo="">
                Todos
            </a>

            @* Base fija *@
            @foreach (var b in baseTipos)
            {
                var isActive = string.Equals(b, tipo, System.StringComparison.OrdinalIgnoreCase);
                <a class="filter-pill @(isActive ? "active" : "")"
                   asp-action="Inactivos"
                   asp-route-page="1"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-q="@q"
                   asp-route-tipo="@b">
                    @b
                </a>
            }

            @* Extras (si los hay) *@
            @foreach (var t in extras)
            {
                var isActive = string.Equals(t, tipo, System.StringComparison.OrdinalIgnoreCase);
                <a class="filter-pill @(isActive ? "active" : "")"
                   asp-action="Inactivos"
                   asp-route-page="1"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-q="@q"
                   asp-route-tipo="@t">
                    @t
                </a>
            }
        </div>

        <!-- Preserva pageSize y resetea página al buscar -->
        <input type="hidden" name="page" value="1" />
        <input type="hidden" name="pageSize" value="@Model.PageSize" />
    </div>
</form>

<!-- Tabla -->
<div class="card shadow-sm border-0 rounded-4">
    <div class="table-responsive">
        <table class="table table-modern table-pro align-middle mb-0">
            <thead>
                <tr>
                    <th>Fecha</th>
                    <th>Tipo</th>
                    <th class="text-end">Costo</th>
                    <th>Responsable</th>
                    <th>Bodega</th>
                    <th>Comentarios</th>
                    <th class="td-center" style="width:200px">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model?.Items != null && Model.Items.Any())
                {
                    foreach (var item in Model.Items)
                    {
                        var comentario = string.IsNullOrWhiteSpace(item.ComentariosAdministracion)
                        ? "—"
                        : (item.ComentariosAdministracion!.Length > 120
                        ? item.ComentariosAdministracion.Substring(0, 120) + "…"
                        : item.ComentariosAdministracion);

                        <tr>
                            <td><span class="text-nowrap">@item.FechaMantenimiento.ToString("yyyy-MM-dd")</span></td>
                            <td><span class="badge-soft-accent">@item.TipoMantenimiento</span></td>
                            <td class="text-end">@item.Costo.ToString("C", cr)</td>
                            <td>@(string.IsNullOrWhiteSpace(item.EmpresaResponsable) ? "—" : item.EmpresaResponsable)</td>
                            <td>@(item.Bodega?.Nombre ?? "—")</td>
                            <td title="@item.ComentariosAdministracion">@comentario</td>
                            <td class="td-center">
                                <a asp-action="Details"
                                   asp-route-id="@item.Id"
                                   asp-route-q="@q"
                                   asp-route-tipo="@tipo"
                                   asp-route-page="@Model.Page"
                                   asp-route-pageSize="@Model.PageSize"
                                   class="btn-icon details" title="Detalles" aria-label="Detalles">
                                    <i class="bi bi-eye"></i>
                                </a>

                                @if (rol == "Administrador")
                                {
                                    <!-- ♻️ Reactivar (verde consistente) -->
                                    <form asp-action="Activar" asp-route-id="@item.Id" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-icon activate" title="Reactivar" aria-label="Reactivar">
                                            <i class="bi bi-arrow-counterclockwise"></i>
                                        </button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted py-5">No hay mantenimientos inactivos.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Paginación (misma estructura que Index) -->
<nav aria-label="Paginación" class="pager-bar mt-2">
    <div class="small text-muted pager-left">
        Mostrando @startRow – @endRow de @Model.TotalItems
    </div>

    <form method="get" class="d-flex align-items-center gap-2 pager-center" asp-action="Inactivos">
        <label class="small text-muted mb-0" for="pageSizeSelect">Pág.</label>
        <select id="pageSizeSelect" name="pageSize" class="form-select form-select-sm" onchange="this.form.submit()">
            @{
                var sizes = new[] { 5, 10, 25, 50, 100 };
            }
            @foreach (var s in sizes)
            {
                if (Model.PageSize == s)
                {
                    <option value="@s" selected="selected">@s</option>
                    ;
                }
                else
                {
                    <option value="@s">@s</option>
                    ;
                }
            }
        </select>
        <!-- Preservar filtros y resetear a página 1 -->
        <input type="hidden" name="q" value="@q" />
        <input type="hidden" name="tipo" value="@tipo" />
        <input type="hidden" name="page" value="1" />
    </form>

    <ul class="pagination mb-0 pager-right">
        <li class="page-item @(Model.Page <= 1 ? "disabled" : "")">
            <a class="page-link"
               asp-action="Inactivos"
               asp-route-page="@(Model.Page - 1)"
               asp-route-pageSize="@Model.PageSize"
               asp-route-q="@q"
               asp-route-tipo="@tipo">Anterior</a>
        </li>

        @for (int p = 1; p <= totalPages; p++)
        {
            <li class="page-item @(p == Model.Page ? "active" : "")">
                <a class="page-link"
                   asp-action="Inactivos"
                   asp-route-page="@p"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-q="@q"
                   asp-route-tipo="@tipo">@p</a>
            </li>
        }

        <li class="page-item @(Model.Page >= totalPages ? "disabled" : "")">
            <a class="page-link"
               asp-action="Inactivos"
               asp-route-page="@(Model.Page + 1)"
               asp-route-pageSize="@Model.PageSize"
               asp-route-q="@q"
               asp-route-tipo="@tipo">Siguiente</a>
        </li>
    </ul>
</nav>
