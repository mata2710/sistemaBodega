@model SistemaBodega.Models.PagedResult<SistemaBodega.Models.Usuario>
@using Microsoft.AspNetCore.Http
@using System
@using System.Linq

@{
    ViewData["Title"] = "Administrar Usuarios";

    // Búsqueda
    string q = Context?.Request?.Query["q"].ToString() ?? string.Empty;

    // Normalizador de roles a las 2 únicas opciones permitidas
    Func<string, string?> NormalizeRole = (r) =>
    {
        var s = (r ?? "").Trim().ToLowerInvariant();
        if (s == "admin" || s == "administrador" || s == "administrator") return "Administrador";
        if (s == "empleado" || s == "employee") return "Empleado";
        return null; // cualquier otro role se ignora en el filtro visual
    };

    // Roles seleccionados desde query -> normalizados y filtrados a las 2 opciones
    string[] selectedRoles = Array.Empty<string>();
    if (Context?.Request?.Query.TryGetValue("roles", out var roleVals) == true)
    {
        selectedRoles = roleVals
            .Select(NormalizeRole)
            .Where(x => x != null)
            .Cast<string>()
            .Distinct(StringComparer.OrdinalIgnoreCase)
            .ToArray();
    }

    // ÚNICOS roles disponibles en el filtro
    var roles = new[] { "Administrador", "Empleado" };

    int totalPages = Math.Max(1, (int)Math.Ceiling((decimal)(Model?.TotalItems ?? 0) / (Model?.PageSize ?? 10)));
    int startRow = (Model?.TotalItems ?? 0) == 0 ? 0 : ((Model!.Page - 1) * Model.PageSize) + 1;
    int endRow = Math.Min(Model!.Page * Model.PageSize, Model.TotalItems);
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />

<style>
    /* Acciones con íconos */
    .btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
        border-radius: 8px;
        border: 0;
        margin-left: .25rem;
        text-decoration: none;
    }

        .btn-icon i {
            font-size: 1.05rem;
            color: #fff;
        }

        .btn-icon.details {
            background: #00809D;
        }

        .btn-icon.edit {
            background: #FFD700;
        }

            .btn-icon.edit i {
                color: #111;
            }

        .btn-icon.delete {
            background: #DC3C22;
        }

        .btn-icon:hover {
            filter: brightness(.95);
        }

    /* Tabla */
    .table-pro {
        width: 100%;
    }

        .table-pro th, .table-pro td {
            padding: .65rem .8rem;
            vertical-align: middle;
        }

    .td-center {
        text-align: center;
    }

    .td-truncate {
        max-width: 360px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .text-nowrap {
        white-space: nowrap;
    }

    /* Buscador con lupa (igual a Clientes) */
    .search-group {
        position: relative;
    }

        .search-group .btn-search {
            position: absolute;
            right: .5rem;
            top: 50%;
            transform: translateY(-50%);
            width: 36px;
            height: 36px;
            border: 0;
            background: transparent;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

            .search-group .btn-search i {
                color: #00809D;
                font-size: 1.1rem;
            }

            .search-group .btn-search:hover i {
                color: #00748A;
            }

        .search-group .form-control.pe-5 {
            padding-right: 2.5rem !important;
        }

    /* Herramientas superiores */
    .page-tools {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: .75rem;
    }

        .page-tools .btn {
            margin-top: 0 !important;
        }

    /* Links marca */
    .link-accent {
        color: #00809D;
        text-decoration: none;
    }

        .link-accent:hover {
            color: #00748A;
            text-decoration: underline;
        }

    /* Filtros de roles (checkboxes) */
    .filters-roles {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

        .filters-roles .form-check {
            display: flex;
            align-items: center;
            gap: .4rem;
            margin: 0;
        }

    /* Botón crear */
    .btn-primary {
        background: #00809D;
        border: 0;
    }

        .btn-primary:hover {
            background: #00748A;
        }

    /* Barra inferior (paginación) */
    .pager-bar {
        display: flex;
        align-items: center;
        gap: .75rem;
        flex-wrap: wrap;
    }

    .pager-left {
        margin-right: auto;
    }

    .pager-center {
        margin-left: auto;
        margin-right: auto;
    }

    .pager-right {
        margin-left: auto;
    }

    .empty-row {
        text-align: center;
        color: #6c757d;
        padding: 1.25rem 0;
    }
</style>

<div class="d-flex align-items-center justify-content-between mt-3 mb-3 page-tools">
    <div>
        <h1 class="m-0">Usuarios</h1>
        <div class="text-muted">Total: @Model.TotalItems</div>
    </div>
    <div class="d-flex align-items-center gap-2">
        <a asp-controller="Admin" asp-action="CrearUsuario" class="btn btn-primary">
            <i class="bi bi-plus-lg me-1"></i> Crear nuevo usuario
        </a>
    </div>
</div>

<!-- Filtros (buscador + roles) -->
<form method="get" class="card shadow-sm mb-3" style="border:1px solid rgba(0,0,0,.06); border-radius:.75rem;">
    <div class="card-body">
        <div class="row g-2 align-items-end">
            <div class="col-md-6">
                <label class="form-label">Nombre</label>
                <div class="search-group">
                    <input type="search"
                           name="q"
                           value="@q"
                           class="form-control pe-5"
                           placeholder="Buscar por nombre o correo..." />
                    <button type="submit" class="btn-search" aria-label="Buscar">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Rol</label>
                <div class="filters-roles small">
                    @foreach (var r in roles)
                    {
                        bool isChecked = selectedRoles.Contains(r, StringComparer.OrdinalIgnoreCase);
                        <label class="form-check">
                            <input class="form-check-input"
                                   type="checkbox"
                                   name="roles"
                                   value="@r"
                                   @(isChecked ? "checked" : "")
                                   onchange="this.form.submit()" />
                            <span class="form-check-label">@r</span>
                        </label>
                    }
                </div>
            </div>
        </div>

        <!-- Reset a página 1 conservando pageSize -->
        <input type="hidden" name="page" value="1" />
        <input type="hidden" name="pageSize" value="@Model.PageSize" />
    </div>
</form>

<div class="table-wrap">
    <table class="table-pro">
        <thead>
            <tr>
                <th style="width:34%">Nombre</th>
                <th style="width:26%">Correo</th>
                <th style="width:14%">Rol</th>
                <th class="td-center" style="width:16%">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @if (Model?.Items != null && Model.Items.Any())
            {
                foreach (var u in Model.Items)
                {
                    <tr>
                        <td class="td-truncate" title="@u.NombreCompleto">
                            <a asp-controller="Admin" asp-action="EditarUsuario" asp-route-id="@u.Id" class="link-accent">
                                @u.NombreCompleto
                            </a>
                        </td>
                        <td class="td-truncate" title="@u.Correo">
                            <a href="mailto:@u.Correo" class="link-accent">@u.Correo</a>
                        </td>
                        <td class="text-nowrap">@u.Rol</td>
                        <td class="td-center">
                            <a asp-controller="Admin" asp-action="EditarUsuario" asp-route-id="@u.Id" class="btn-icon edit" title="Editar" aria-label="Editar">
                                <i class="bi bi-pencil-square"></i>
                            </a>

                            <!-- 🔁 AHORA REDIRIGE A LA VISTA DELETE -->
                            <a asp-controller="Admin"
                               asp-action="DeleteUsuario"
                               asp-route-id="@u.Id"
                               class="btn-icon delete"
                               title="Eliminar (ver confirmación)"
                               aria-label="Eliminar">
                                <i class="bi bi-trash3"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="4" class="empty-row">No se encontraron usuarios.</td></tr>
            }
        </tbody>
    </table>
</div>

@{
    // Helper para construir enlaces preservando filtros (normalizados)
    Func<int, string> pageUrl = (p) =>
        Url.Action("Usuarios", "Admin", new
        {
            page = p,
            pageSize = Model.PageSize,
            q = q,
            roles = selectedRoles   // ya normalizados a "Administrador"/"Empleado"
        })!;
}

<!-- Barra inferior con paginación -->
<nav aria-label="Paginación" class="pager-bar mt-2">
    <div class="small text-muted pager-left">
        Mostrando @startRow - @endRow de @Model.TotalItems
    </div>

    <!-- Selector pageSize -->
    <form method="get" class="d-flex align-items-center gap-2 pager-center">
        <label class="small text-muted mb-0" for="pageSizeSelect">Pág.</label>
        <select id="pageSizeSelect" name="pageSize" class="form-select form-select-sm" onchange="this.form.submit()">
            @{
                var sizes = new[] { 5, 10, 25, 50, 100 };
            }
            @foreach (var s in sizes)
            {
                if (Model.PageSize == s)
                {
                    <option value="@s" selected="selected">@s</option>
                }
                else
                {
                    <option value="@s">@s</option>
                }
            }
        </select>

        <!-- Preservar búsqueda y roles y reset a página 1 -->
        <input type="hidden" name="q" value="@q" />
        <input type="hidden" name="page" value="1" />
        @foreach (var r in selectedRoles)
        {
            <input type="hidden" name="roles" value="@r" />
        }
    </form>

    <!-- Paginación numerada -->
    <ul class="pagination mb-0 pager-right">
        <li class="page-item @(Model.Page <= 1 ? "disabled" : "")">
            <a class="page-link" href="@(pageUrl(Model.Page - 1))">Anterior</a>
        </li>

        @for (int p = 1; p <= totalPages; p++)
        {
            <li class="page-item @(p == Model.Page ? "active" : "")">
                <a class="page-link" href="@(pageUrl(p))">@p</a>
            </li>
        }

        <li class="page-item @(Model.Page >= totalPages ? "disabled" : "")">
            <a class="page-link" href="@(pageUrl(Model.Page + 1))">Siguiente</a>
        </li>
    </ul>
</nav>
